<?xml version="1.0" encoding="ISO-8859-1"?>
<firestorm-project version="4.0.1">
  <name>EURB-DAO-Gen-v1</name>
  <description />
  <dbimport-config>
    <jdbc-datasource>MySQL Datasource</jdbc-datasource>
    <jdbc-catalog>eurb</jdbc-catalog>
    <jdbc-schema />
    <sql-import-file />
    <sql-vendor />
    <import-tables>true</import-tables>
    <import-views>true</import-views>
    <import-procedures>true</import-procedures>
    <prefer-objects>true</prefer-objects>
    <sync-new>true</sync-new>
    <sync-existing>true</sync-existing>
    <sync-deleted>true</sync-deleted>
    <map-large-integer-to-bigdecimal>false</map-large-integer-to-bigdecimal>
    <verbose-logging>false</verbose-logging>
    <filter-list>
      <filter>authorities</filter>
      <filter>column_mapping</filter>
      <filter>db_config</filter>
      <filter>group_aggregation</filter>
      <filter>group_authorities</filter>
      <filter>group_members</filter>
      <filter>groups</filter>
      <filter>persistable_object</filter>
      <filter>report_category</filter>
      <filter>report_column</filter>
      <filter>report_dataset</filter>
      <filter>report_design</filter>
      <filter>report_execution_history</filter>
      <filter>report_filter</filter>
      <filter>report_format</filter>
      <filter>table_mapping</filter>
      <filter>users</filter>
    </filter-list>
  </dbimport-config>
  <database>
    <platform>MySQL</platform>
    <catalog-name>eurb</catalog-name>
    <schema-name />
    <table-list>
      <table>
        <sql-name>authorities</sql-name>
        <java-name>Authorities</java-name>
        <primary-key>
          <column-list>
            <column>username</column>
            <column>authority</column>
          </column-list>
        </primary-key>
        <foreign-key-list>
          <foreign-key>
            <name>fk_authorities_users</name>
            <parent-table>users</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>Users</nav-to-parent-term>
            <nav-to-child-term>Authorities</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>username</column-name>
                <ref-column-name>username</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
        </foreign-key-list>
        <column-list>
          <column>
            <java-name>username</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>username</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>50</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>authority</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>authority</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>50</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
        </column-list>
        <finder-list>
          <finder>
            <name>findByPrimaryKey</name>
            <multi-finder>false</multi-finder>
            <where>username = :username AND authority = :authority</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>username</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>50</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>authority</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>50</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findAll</name>
            <multi-finder>true</multi-finder>
            <where />
            <order-by>username, authority</order-by>
            <query-type>WHERE</query-type>
            <parameter-list />
          </finder>
          <finder>
            <name>findByUsers</name>
            <multi-finder>true</multi-finder>
            <where>username = :username</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>username</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>50</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereUsernameEquals</name>
            <multi-finder>true</multi-finder>
            <where>username = :username</where>
            <order-by>username</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>username</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>50</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereAuthorityEquals</name>
            <multi-finder>true</multi-finder>
            <where>authority = :authority</where>
            <order-by>authority</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>authority</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>50</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
        </finder-list>
      </table>
      <table>
        <sql-name>column_mapping</sql-name>
        <java-name>ColumnMapping</java-name>
        <primary-key>
          <column-list>
            <column>id</column>
          </column-list>
        </primary-key>
        <foreign-key-list>
          <foreign-key>
            <name>fk_column_mapping_persistable_object</name>
            <parent-table>persistable_object</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>PersistableObject</nav-to-parent-term>
            <nav-to-child-term>ColumnMapping</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
          <foreign-key>
            <name>fk_column_mapping_table_mapping</name>
            <parent-table>table_mapping</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>TableMapping</nav-to-parent-term>
            <nav-to-child-term>ColumnMapping1</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>table_mapping_id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
        </foreign-key-list>
        <column-list>
          <column>
            <java-name>id</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>tableMappingId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>table_mapping_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>columnName</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>column_name</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>255</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>mappedName</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>mapped_name</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>255</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>formatPattern</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>format_pattern</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>255</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>staticMapping</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>static_mapping</sql-name>
            <sql-type>LONGTEXT</sql-type>
            <jdbc-type>LONGVARCHAR</jdbc-type>
            <jdbc-precision>2147483647</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>referencedTable</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>referenced_table</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>255</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>referencedIdCol</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>referenced_id_col</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>255</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>referencedValueCol</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>referenced_value_col</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>255</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>colType</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>col_type</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>45</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>colOrder</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>col_order</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>45</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
        </column-list>
        <finder-list>
          <finder>
            <name>findByPrimaryKey</name>
            <multi-finder>false</multi-finder>
            <where>id = :id</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereTypeEquals</name>
            <multi-finder>true</multi-finder>
            <where>type = :type</where>
            <order-by>type</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>type</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>45</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findAll</name>
            <multi-finder>true</multi-finder>
            <where />
            <order-by>id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list />
          </finder>
          <finder>
            <name>findByPersistableObject</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findByTableMapping</name>
            <multi-finder>true</multi-finder>
            <where>table_mapping_id = :tableMappingId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>tableMappingId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by>id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereTableMappingIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>table_mapping_id = :tableMappingId</where>
            <order-by>table_mapping_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>tableMappingId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereColumnNameEquals</name>
            <multi-finder>true</multi-finder>
            <where>column_name = :columnName</where>
            <order-by>column_name</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>columnName</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>255</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereMappedNameEquals</name>
            <multi-finder>true</multi-finder>
            <where>mapped_name = :mappedName</where>
            <order-by>mapped_name</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>mappedName</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>255</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereColTypeEquals</name>
            <multi-finder>true</multi-finder>
            <where>col_type = :colType</where>
            <order-by>col_type</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>colType</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>45</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereColOrderEquals</name>
            <multi-finder>true</multi-finder>
            <where>col_order = :colOrder</where>
            <order-by>col_order</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>colOrder</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>45</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereFormatPatternEquals</name>
            <multi-finder>true</multi-finder>
            <where>format_pattern = :formatPattern</where>
            <order-by>format_pattern</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>formatPattern</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>255</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereStaticMappingEquals</name>
            <multi-finder>true</multi-finder>
            <where>static_mapping = :staticMapping</where>
            <order-by>static_mapping</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>staticMapping</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>LONGVARCHAR</jdbc-type>
                <jdbc-precision>2147483647</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereReferencedTableEquals</name>
            <multi-finder>true</multi-finder>
            <where>referenced_table = :referencedTable</where>
            <order-by>referenced_table</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>referencedTable</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>255</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereReferencedIdColEquals</name>
            <multi-finder>true</multi-finder>
            <where>referenced_id_col = :referencedIdCol</where>
            <order-by>referenced_id_col</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>referencedIdCol</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>255</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereReferencedValueColEquals</name>
            <multi-finder>true</multi-finder>
            <where>referenced_value_col = :referencedValueCol</where>
            <order-by>referenced_value_col</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>referencedValueCol</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>255</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
        </finder-list>
      </table>
      <table>
        <sql-name>db_config</sql-name>
        <java-name>DbConfig</java-name>
        <primary-key>
          <column-list>
            <column>id</column>
          </column-list>
        </primary-key>
        <foreign-key-list>
          <foreign-key>
            <name>fk_db_config_persistable_object</name>
            <parent-table>persistable_object</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>PersistableObject</nav-to-parent-term>
            <nav-to-child-term>DbConfig</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
        </foreign-key-list>
        <column-list>
          <column>
            <java-name>id</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>name</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>name</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>255</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>driverClass</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>driver_class</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>255</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>driverUrl</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>driver_url</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>255</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>username</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>username</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>255</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>password</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>password</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>255</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>testQuery</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>test_query</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>1024</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
        </column-list>
        <finder-list>
          <finder>
            <name>findByPrimaryKey</name>
            <multi-finder>false</multi-finder>
            <where>id = :id</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findAll</name>
            <multi-finder>true</multi-finder>
            <where />
            <order-by>id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list />
          </finder>
          <finder>
            <name>findByPersistableObject</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by>id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereNameEquals</name>
            <multi-finder>true</multi-finder>
            <where>name = :name</where>
            <order-by>name</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>name</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>255</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereDriverClassEquals</name>
            <multi-finder>true</multi-finder>
            <where>driver_class = :driverClass</where>
            <order-by>driver_class</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>driverClass</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>255</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereDriverUrlEquals</name>
            <multi-finder>true</multi-finder>
            <where>driver_url = :driverUrl</where>
            <order-by>driver_url</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>driverUrl</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>255</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereUsernameEquals</name>
            <multi-finder>true</multi-finder>
            <where>username = :username</where>
            <order-by>username</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>username</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>255</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWherePasswordEquals</name>
            <multi-finder>true</multi-finder>
            <where>password = :password</where>
            <order-by>password</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>password</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>255</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereTestQueryEquals</name>
            <multi-finder>true</multi-finder>
            <where>test_query = :testQuery</where>
            <order-by>test_query</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>testQuery</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>1024</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
        </finder-list>
      </table>
      <table>
        <sql-name>group_aggregation</sql-name>
        <java-name>GroupAggregation</java-name>
        <primary-key>
          <column-list>
            <column>id</column>
          </column-list>
        </primary-key>
        <foreign-key-list>
          <foreign-key>
            <name>fk_group_aggregation_persistable_object</name>
            <parent-table>persistable_object</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>PersistableObject</nav-to-parent-term>
            <nav-to-child-term>GroupAggregation</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
          <foreign-key>
            <name>fk_group_aggregation_report_column_parent</name>
            <parent-table>report_column</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>ReportColumn</nav-to-parent-term>
            <nav-to-child-term>GroupAggregation1</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>parent_column_id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
              <column>
                <column-name>parent_column_dataset_id</column-name>
                <ref-column-name>dataset_id</ref-column-name>
              </column>
              <column>
                <column-name>parent_column_design_id</column-name>
                <ref-column-name>design_id</ref-column-name>
              </column>
              <column>
                <column-name>parent_column_design_version_id</column-name>
                <ref-column-name>design_version_id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
          <foreign-key>
            <name>fk_group_aggregation_report_column_aggregated</name>
            <parent-table>report_column</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>ReportColumn2</nav-to-parent-term>
            <nav-to-child-term>GroupAggregation3</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>aggregated_report_column_id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
              <column>
                <column-name>aggregated_report_column_dataset_id</column-name>
                <ref-column-name>dataset_id</ref-column-name>
              </column>
              <column>
                <column-name>aggregated_report_column_design_id</column-name>
                <ref-column-name>design_id</ref-column-name>
              </column>
              <column>
                <column-name>aggregated_report_column_design_version_id</column-name>
                <ref-column-name>design_version_id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
        </foreign-key-list>
        <column-list>
          <column>
            <java-name>id</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>parentColumnId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>parent_column_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>parentColumnDatasetId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>parent_column_dataset_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>parentColumnDesignId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>parent_column_design_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>parentColumnDesignVersionId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>parent_column_design_version_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>aggregatedReportColumnId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>aggregated_report_column_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>aggregatedReportColumnDatasetId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>aggregated_report_column_dataset_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>aggregatedReportColumnDesignId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>aggregated_report_column_design_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>aggregatedReportColumnDesignVersionId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>aggregated_report_column_design_version_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>aggregationFunction</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>aggregation_function</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>45</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>place</java-name>
            <java-type>java.lang.Integer</java-type>
            <java-default-value />
            <sql-name>place</sql-name>
            <sql-type>INT</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
        </column-list>
        <finder-list>
          <finder>
            <name>findByPrimaryKey</name>
            <multi-finder>false</multi-finder>
            <where>id = :id</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findAll</name>
            <multi-finder>true</multi-finder>
            <where />
            <order-by>id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list />
          </finder>
          <finder>
            <name>findByPersistableObject</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findByReportColumn</name>
            <multi-finder>true</multi-finder>
            <where>parent_column_id = :parentColumnId AND parent_column_dataset_id = :parentColumnDatasetId AND parent_column_design_id = :parentColumnDesignId AND parent_column_design_version_id = :parentColumnDesignVersionId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>parentColumnId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>parentColumnDatasetId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>parentColumnDesignId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>parentColumnDesignVersionId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findByReportColumn2</name>
            <multi-finder>true</multi-finder>
            <where>aggregated_report_column_id = :aggregatedReportColumnId AND aggregated_report_column_dataset_id = :aggregatedReportColumnDatasetId AND aggregated_report_column_design_id = :aggregatedReportColumnDesignId AND aggregated_report_column_design_version_id = :aggregatedReportColumnDesignVersionId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>aggregatedReportColumnId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>aggregatedReportColumnDatasetId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>aggregatedReportColumnDesignId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>aggregatedReportColumnDesignVersionId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by>id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereParentColumnIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>parent_column_id = :parentColumnId</where>
            <order-by>parent_column_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>parentColumnId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereParentColumnDatasetIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>parent_column_dataset_id = :parentColumnDatasetId</where>
            <order-by>parent_column_dataset_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>parentColumnDatasetId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereParentColumnDesignIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>parent_column_design_id = :parentColumnDesignId</where>
            <order-by>parent_column_design_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>parentColumnDesignId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereParentColumnDesignVersionIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>parent_column_design_version_id = :parentColumnDesignVersionId</where>
            <order-by>parent_column_design_version_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>parentColumnDesignVersionId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereAggregatedReportColumnIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>aggregated_report_column_id = :aggregatedReportColumnId</where>
            <order-by>aggregated_report_column_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>aggregatedReportColumnId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereAggregatedReportColumnDatasetIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>aggregated_report_column_dataset_id = :aggregatedReportColumnDatasetId</where>
            <order-by>aggregated_report_column_dataset_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>aggregatedReportColumnDatasetId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereAggregatedReportColumnDesignIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>aggregated_report_column_design_id = :aggregatedReportColumnDesignId</where>
            <order-by>aggregated_report_column_design_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>aggregatedReportColumnDesignId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereAggregatedReportColumnDesignVersionIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>aggregated_report_column_design_version_id = :aggregatedReportColumnDesignVersionId</where>
            <order-by>aggregated_report_column_design_version_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>aggregatedReportColumnDesignVersionId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereAggregationFunctionEquals</name>
            <multi-finder>true</multi-finder>
            <where>aggregation_function = :aggregationFunction</where>
            <order-by>aggregation_function</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>aggregationFunction</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>45</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWherePlaceEquals</name>
            <multi-finder>true</multi-finder>
            <where>place = :place</where>
            <order-by>place</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>place</java-name>
                <java-type>java.lang.Integer</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
        </finder-list>
      </table>
      <table>
        <sql-name>group_authorities</sql-name>
        <java-name>GroupAuthorities</java-name>
        <foreign-key-list>
          <foreign-key>
            <name>fk_group_authorities_group</name>
            <parent-table>groups</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>Groups</nav-to-parent-term>
            <nav-to-child-term>GroupAuthorities</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>group_id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
        </foreign-key-list>
        <column-list>
          <column>
            <java-name>groupId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>group_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>authority</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>authority</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>50</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
        </column-list>
        <finder-list>
          <finder>
            <name>findAll</name>
            <multi-finder>true</multi-finder>
            <where />
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list />
          </finder>
          <finder>
            <name>findByGroups</name>
            <multi-finder>true</multi-finder>
            <where>group_id = :groupId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>groupId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereGroupIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>group_id = :groupId</where>
            <order-by>group_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>groupId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereAuthorityEquals</name>
            <multi-finder>true</multi-finder>
            <where>authority = :authority</where>
            <order-by>authority</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>authority</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>50</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
        </finder-list>
      </table>
      <table>
        <sql-name>group_members</sql-name>
        <java-name>GroupMembers</java-name>
        <primary-key>
          <column-list>
            <column>id</column>
          </column-list>
        </primary-key>
        <foreign-key-list>
          <foreign-key>
            <name>fk_group_members_group</name>
            <parent-table>groups</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>Groups</nav-to-parent-term>
            <nav-to-child-term>GroupMembers</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>group_id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
        </foreign-key-list>
        <column-list>
          <column>
            <java-name>id</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>true</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>username</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>username</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>50</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>groupId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>group_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
        </column-list>
        <finder-list>
          <finder>
            <name>findByPrimaryKey</name>
            <multi-finder>false</multi-finder>
            <where>id = :id</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findAll</name>
            <multi-finder>true</multi-finder>
            <where />
            <order-by>id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list />
          </finder>
          <finder>
            <name>findByGroups</name>
            <multi-finder>true</multi-finder>
            <where>group_id = :groupId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>groupId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by>id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereUsernameEquals</name>
            <multi-finder>true</multi-finder>
            <where>username = :username</where>
            <order-by>username</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>username</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>50</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereGroupIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>group_id = :groupId</where>
            <order-by>group_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>groupId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
        </finder-list>
      </table>
      <table>
        <sql-name>groups</sql-name>
        <java-name>Groups</java-name>
        <primary-key>
          <column-list>
            <column>id</column>
          </column-list>
        </primary-key>
        <foreign-key-list>
          <foreign-key>
            <name>fk_groups_persistable_object</name>
            <parent-table>persistable_object</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>PersistableObject</nav-to-parent-term>
            <nav-to-child-term>Groups</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
        </foreign-key-list>
        <column-list>
          <column>
            <java-name>id</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>true</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>groupName</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>group_name</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>50</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
        </column-list>
        <finder-list>
          <finder>
            <name>findByPrimaryKey</name>
            <multi-finder>false</multi-finder>
            <where>id = :id</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findAll</name>
            <multi-finder>true</multi-finder>
            <where />
            <order-by>id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list />
          </finder>
          <finder>
            <name>findByPersistableObject</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by>id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereGroupNameEquals</name>
            <multi-finder>true</multi-finder>
            <where>group_name = :groupName</where>
            <order-by>group_name</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>groupName</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>50</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
        </finder-list>
      </table>
      <table>
        <sql-name>persistable_object</sql-name>
        <java-name>PersistableObject</java-name>
        <primary-key>
          <column-list>
            <column>id</column>
          </column-list>
        </primary-key>
        <foreign-key-list>
          <foreign-key>
            <name>fk_persistable_object_creator</name>
            <parent-table>users</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>Users</nav-to-parent-term>
            <nav-to-child-term>PersistableObject</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>creator</column-name>
                <ref-column-name>username</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
          <foreign-key>
            <name>fk_persistable_object_modifier</name>
            <parent-table>users</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>Users1</nav-to-parent-term>
            <nav-to-child-term>PersistableObject2</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>modifier</column-name>
                <ref-column-name>username</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
        </foreign-key-list>
        <column-list>
          <column>
            <java-name>id</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>true</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>creator</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>creator</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>50</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>createDate</java-name>
            <java-type>java.util.Date</java-type>
            <java-default-value />
            <sql-name>create_date</sql-name>
            <sql-type>TIMESTAMP</sql-type>
            <jdbc-type>TIMESTAMP</jdbc-type>
            <jdbc-precision>19</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>modifier</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>modifier</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>50</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>modifyDate</java-name>
            <java-type>java.util.Date</java-type>
            <java-default-value />
            <sql-name>modify_date</sql-name>
            <sql-type>TIMESTAMP</sql-type>
            <jdbc-type>TIMESTAMP</jdbc-type>
            <jdbc-precision>19</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>objType</java-name>
            <java-type>java.lang.Integer</java-type>
            <java-default-value />
            <sql-name>obj_type</sql-name>
            <sql-type>INT UNSIGNED</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
        </column-list>
        <finder-list>
          <finder>
            <name>findByPrimaryKey</name>
            <multi-finder>false</multi-finder>
            <where>id = :id</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereTypeEquals</name>
            <multi-finder>true</multi-finder>
            <where>type = :type</where>
            <order-by>type</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>type</java-name>
                <java-type>java.lang.Integer</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findAll</name>
            <multi-finder>true</multi-finder>
            <where />
            <order-by>id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list />
          </finder>
          <finder>
            <name>findByUsers</name>
            <multi-finder>true</multi-finder>
            <where>creator = :creator</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>creator</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>50</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findByUsers2</name>
            <multi-finder>true</multi-finder>
            <where>modifier = :modifier</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>modifier</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>50</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by>id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereObjTypeEquals</name>
            <multi-finder>true</multi-finder>
            <where>obj_type = :objType</where>
            <order-by>obj_type</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>objType</java-name>
                <java-type>java.lang.Integer</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereCreatorEquals</name>
            <multi-finder>true</multi-finder>
            <where>creator = :creator</where>
            <order-by>creator</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>creator</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>50</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereCreateDateEquals</name>
            <multi-finder>true</multi-finder>
            <where>create_date = :createDate</where>
            <order-by>create_date</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>createDate</java-name>
                <java-type>java.util.Date</java-type>
                <jdbc-type>TIMESTAMP</jdbc-type>
                <jdbc-precision>19</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereModifierEquals</name>
            <multi-finder>true</multi-finder>
            <where>modifier = :modifier</where>
            <order-by>modifier</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>modifier</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>50</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereModifyDateEquals</name>
            <multi-finder>true</multi-finder>
            <where>modify_date = :modifyDate</where>
            <order-by>modify_date</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>modifyDate</java-name>
                <java-type>java.util.Date</java-type>
                <jdbc-type>TIMESTAMP</jdbc-type>
                <jdbc-precision>19</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
        </finder-list>
      </table>
      <table>
        <sql-name>report_category</sql-name>
        <java-name>ReportCategory</java-name>
        <primary-key>
          <column-list>
            <column>id</column>
          </column-list>
        </primary-key>
        <foreign-key-list>
          <foreign-key>
            <name>fk_report_category_persistable_object</name>
            <parent-table>persistable_object</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>PersistableObject</nav-to-parent-term>
            <nav-to-child-term>ReportCategory</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
        </foreign-key-list>
        <column-list>
          <column>
            <java-name>id</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>name</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>name</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>255</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>description</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>description</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>1024</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
        </column-list>
        <finder-list>
          <finder>
            <name>findByPrimaryKey</name>
            <multi-finder>false</multi-finder>
            <where>id = :id</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findAll</name>
            <multi-finder>true</multi-finder>
            <where />
            <order-by>id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list />
          </finder>
          <finder>
            <name>findByPersistableObject</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by>id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereNameEquals</name>
            <multi-finder>true</multi-finder>
            <where>name = :name</where>
            <order-by>name</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>name</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>255</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereDescriptionEquals</name>
            <multi-finder>true</multi-finder>
            <where>description = :description</where>
            <order-by>description</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>description</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>1024</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
        </finder-list>
      </table>
      <table>
        <sql-name>report_column</sql-name>
        <java-name>ReportColumn</java-name>
        <primary-key>
          <column-list>
            <column>id</column>
            <column>dataset_id</column>
            <column>design_id</column>
            <column>design_version_id</column>
          </column-list>
        </primary-key>
        <foreign-key-list>
          <foreign-key>
            <name>fk_report_column_persistable_object</name>
            <parent-table>persistable_object</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>PersistableObject</nav-to-parent-term>
            <nav-to-child-term>ReportColumn</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
          <foreign-key>
            <name>fk_report_column_column_mapping</name>
            <parent-table>column_mapping</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>ColumnMapping</nav-to-parent-term>
            <nav-to-child-term>ReportColumn1</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>column_mapping_id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
          <foreign-key>
            <name>fk_report_column_report_column</name>
            <parent-table>report_column</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>ReportColumn</nav-to-parent-term>
            <nav-to-child-term>ReportColumn2</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>report_column_id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
          <foreign-key>
            <name>fk_report_column_report_dataset</name>
            <parent-table>report_dataset</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>ReportDataset</nav-to-parent-term>
            <nav-to-child-term>ReportColumn3</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>dataset_id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
              <column>
                <column-name>design_id</column-name>
                <ref-column-name>design_id</ref-column-name>
              </column>
              <column>
                <column-name>design_version_id</column-name>
                <ref-column-name>design_version_id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
        </foreign-key-list>
        <column-list>
          <column>
            <java-name>id</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>datasetId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>dataset_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>designId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>design_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>designVersionId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>design_version_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>columnMappingId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>column_mapping_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>reportColumnId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>report_column_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>sortOrder</java-name>
            <java-type>java.lang.Integer</java-type>
            <java-default-value />
            <sql-name>sort_order</sql-name>
            <sql-type>INT</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>sortType</java-name>
            <java-type>boolean</java-type>
            <java-default-value />
            <sql-name>sort_type</sql-name>
            <sql-type>BIT</sql-type>
            <jdbc-type>BIT</jdbc-type>
            <jdbc-precision>0</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>groupLevel</java-name>
            <java-type>java.lang.Integer</java-type>
            <java-default-value />
            <sql-name>group_level</sql-name>
            <sql-type>INT</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>columnWidth</java-name>
            <java-type>java.lang.Integer</java-type>
            <java-default-value />
            <sql-name>column_width</sql-name>
            <sql-type>INT</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>columnAlign</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>column_align</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>columnDir</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>column_dir</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>3</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>columnHeader</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>column_header</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>255</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>isCustom</java-name>
            <java-type>boolean</java-type>
            <java-default-value />
            <sql-name>is_custom</sql-name>
            <sql-type>BIT</sql-type>
            <jdbc-type>BIT</jdbc-type>
            <jdbc-precision>0</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>formula</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>formula</sql-name>
            <sql-type>LONGTEXT</sql-type>
            <jdbc-type>LONGVARCHAR</jdbc-type>
            <jdbc-precision>2147483647</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>colType</java-name>
            <java-type>java.lang.Integer</java-type>
            <java-default-value />
            <sql-name>col_type</sql-name>
            <sql-type>INT UNSIGNED</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>colOrder</java-name>
            <java-type>java.lang.Integer</java-type>
            <java-default-value />
            <sql-name>col_order</sql-name>
            <sql-type>INT</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
        </column-list>
        <finder-list>
          <finder>
            <name>findByPrimaryKey</name>
            <multi-finder>false</multi-finder>
            <where>id = :id AND dataset_id = :datasetId AND design_id = :designId AND design_version_id = :designVersionId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>datasetId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>designId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>designVersionId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereTypeEquals</name>
            <multi-finder>true</multi-finder>
            <where>type = :type</where>
            <order-by>type</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>type</java-name>
                <java-type>java.lang.Integer</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereOrderEquals</name>
            <multi-finder>true</multi-finder>
            <where>order = :order</where>
            <order-by>order</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>order</java-name>
                <java-type>java.lang.Integer</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findAll</name>
            <multi-finder>true</multi-finder>
            <where />
            <order-by>id, dataset_id, design_id, design_version_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list />
          </finder>
          <finder>
            <name>findByPersistableObject</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findByColumnMapping</name>
            <multi-finder>true</multi-finder>
            <where>column_mapping_id = :columnMappingId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>columnMappingId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findByReportColumn</name>
            <multi-finder>true</multi-finder>
            <where>report_column_id = :reportColumnId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>reportColumnId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findByReportDataset</name>
            <multi-finder>true</multi-finder>
            <where>dataset_id = :datasetId AND design_id = :designId AND design_version_id = :designVersionId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>datasetId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>designId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>designVersionId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by>id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereDatasetIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>dataset_id = :datasetId</where>
            <order-by>dataset_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>datasetId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereDesignIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>design_id = :designId</where>
            <order-by>design_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>designId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereDesignVersionIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>design_version_id = :designVersionId</where>
            <order-by>design_version_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>designVersionId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereColTypeEquals</name>
            <multi-finder>true</multi-finder>
            <where>col_type = :colType</where>
            <order-by>col_type</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>colType</java-name>
                <java-type>java.lang.Integer</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereColumnMappingIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>column_mapping_id = :columnMappingId</where>
            <order-by>column_mapping_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>columnMappingId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereReportColumnIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>report_column_id = :reportColumnId</where>
            <order-by>report_column_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>reportColumnId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereColOrderEquals</name>
            <multi-finder>true</multi-finder>
            <where>col_order = :colOrder</where>
            <order-by>col_order</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>colOrder</java-name>
                <java-type>java.lang.Integer</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereSortOrderEquals</name>
            <multi-finder>true</multi-finder>
            <where>sort_order = :sortOrder</where>
            <order-by>sort_order</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>sortOrder</java-name>
                <java-type>java.lang.Integer</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereSortTypeEquals</name>
            <multi-finder>true</multi-finder>
            <where>sort_type = :sortType</where>
            <order-by>sort_type</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>sortType</java-name>
                <java-type>java.lang.Short</java-type>
                <jdbc-type>BIT</jdbc-type>
                <jdbc-precision>0</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereGroupLevelEquals</name>
            <multi-finder>true</multi-finder>
            <where>group_level = :groupLevel</where>
            <order-by>group_level</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>groupLevel</java-name>
                <java-type>java.lang.Integer</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereColumnWidthEquals</name>
            <multi-finder>true</multi-finder>
            <where>column_width = :columnWidth</where>
            <order-by>column_width</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>columnWidth</java-name>
                <java-type>java.lang.Integer</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereColumnAlignEquals</name>
            <multi-finder>true</multi-finder>
            <where>column_align = :columnAlign</where>
            <order-by>column_align</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>columnAlign</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereColumnDirEquals</name>
            <multi-finder>true</multi-finder>
            <where>column_dir = :columnDir</where>
            <order-by>column_dir</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>columnDir</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>3</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereColumnHeaderEquals</name>
            <multi-finder>true</multi-finder>
            <where>column_header = :columnHeader</where>
            <order-by>column_header</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>columnHeader</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>255</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereIsCustomEquals</name>
            <multi-finder>true</multi-finder>
            <where>is_custom = :isCustom</where>
            <order-by>is_custom</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>isCustom</java-name>
                <java-type>java.lang.Short</java-type>
                <jdbc-type>BIT</jdbc-type>
                <jdbc-precision>0</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereFormulaEquals</name>
            <multi-finder>true</multi-finder>
            <where>formula = :formula</where>
            <order-by>formula</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>formula</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>LONGVARCHAR</jdbc-type>
                <jdbc-precision>2147483647</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
        </finder-list>
      </table>
      <table>
        <sql-name>report_dataset</sql-name>
        <java-name>ReportDataset</java-name>
        <primary-key>
          <column-list>
            <column>id</column>
            <column>design_id</column>
            <column>design_version_id</column>
          </column-list>
        </primary-key>
        <foreign-key-list>
          <foreign-key>
            <name>fk_report_dataset_persistable_object</name>
            <parent-table>persistable_object</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>PersistableObject</nav-to-parent-term>
            <nav-to-child-term>ReportDataset</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
          <foreign-key>
            <name>fk_report_dataset_report_design_base_rpt</name>
            <parent-table>report_design</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>ReportDesign</nav-to-parent-term>
            <nav-to-child-term>ReportDataset1</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>base_report_id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
              <column>
                <column-name>base_report_version_id</column-name>
                <ref-column-name>version_id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
          <foreign-key>
            <name>fk_report_dataset_report_design_id</name>
            <parent-table>report_design</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>ReportDesign2</nav-to-parent-term>
            <nav-to-child-term>ReportDataset3</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>design_id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
              <column>
                <column-name>design_version_id</column-name>
                <ref-column-name>version_id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
          <foreign-key>
            <name>fk_report_dataset_table_mapping</name>
            <parent-table>table_mapping</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>TableMapping</nav-to-parent-term>
            <nav-to-child-term>ReportDataset4</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>table_mapping_id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
        </foreign-key-list>
        <column-list>
          <column>
            <java-name>id</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>designId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>design_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>designVersionId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>design_version_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>tableMappingId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>table_mapping_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>baseReportId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>base_report_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>baseReportVersionId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>base_report_version_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>operator</java-name>
            <java-type>java.lang.Integer</java-type>
            <java-default-value />
            <sql-name>operator</sql-name>
            <sql-type>INT UNSIGNED</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>rptOrder</java-name>
            <java-type>java.lang.Integer</java-type>
            <java-default-value />
            <sql-name>rpt_order</sql-name>
            <sql-type>INT UNSIGNED</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
        </column-list>
        <finder-list>
          <finder>
            <name>findByPrimaryKey</name>
            <multi-finder>false</multi-finder>
            <where>id = :id AND design_id = :designId AND design_version_id = :designVersionId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>designId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>designVersionId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereOrderEquals</name>
            <multi-finder>true</multi-finder>
            <where>order = :order</where>
            <order-by>order</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>order</java-name>
                <java-type>java.lang.Integer</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findAll</name>
            <multi-finder>true</multi-finder>
            <where />
            <order-by>id, design_id, design_version_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list />
          </finder>
          <finder>
            <name>findByPersistableObject</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findByReportDesign</name>
            <multi-finder>true</multi-finder>
            <where>base_report_id = :baseReportId AND base_report_version_id = :baseReportVersionId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>baseReportId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>baseReportVersionId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findByReportDesign2</name>
            <multi-finder>true</multi-finder>
            <where>design_id = :designId AND design_version_id = :designVersionId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>designId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>designVersionId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findByTableMapping</name>
            <multi-finder>true</multi-finder>
            <where>table_mapping_id = :tableMappingId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>tableMappingId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by>id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereDesignIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>design_id = :designId</where>
            <order-by>design_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>designId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereDesignVersionIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>design_version_id = :designVersionId</where>
            <order-by>design_version_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>designVersionId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereTableMappingIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>table_mapping_id = :tableMappingId</where>
            <order-by>table_mapping_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>tableMappingId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereBaseReportIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>base_report_id = :baseReportId</where>
            <order-by>base_report_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>baseReportId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereBaseReportVersionIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>base_report_version_id = :baseReportVersionId</where>
            <order-by>base_report_version_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>baseReportVersionId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereRptOrderEquals</name>
            <multi-finder>true</multi-finder>
            <where>rpt_order = :rptOrder</where>
            <order-by>rpt_order</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>rptOrder</java-name>
                <java-type>java.lang.Integer</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereOperatorEquals</name>
            <multi-finder>true</multi-finder>
            <where>operator = :operator</where>
            <order-by>operator</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>operator</java-name>
                <java-type>java.lang.Integer</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
        </finder-list>
      </table>
      <table>
        <sql-name>report_design</sql-name>
        <java-name>ReportDesign</java-name>
        <primary-key>
          <column-list>
            <column>id</column>
            <column>version_id</column>
          </column-list>
        </primary-key>
        <foreign-key-list>
          <foreign-key>
            <name>fk_report_design_persistable_object</name>
            <parent-table>persistable_object</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>PersistableObject</nav-to-parent-term>
            <nav-to-child-term>ReportDesign</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
          <foreign-key>
            <name>fk_report_design_report_category</name>
            <parent-table>report_category</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>ReportCategory</nav-to-parent-term>
            <nav-to-child-term>ReportDesign1</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>category_id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
        </foreign-key-list>
        <column-list>
          <column>
            <java-name>id</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>versionId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>version_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>name</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>name</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>45</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>description</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>description</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>45</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>categoryId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>category_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>queryText</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>query_text</sql-name>
            <sql-type>LONGTEXT</sql-type>
            <jdbc-type>LONGVARCHAR</jdbc-type>
            <jdbc-precision>2147483647</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>selectPart</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>select_part</sql-name>
            <sql-type>LONGTEXT</sql-type>
            <jdbc-type>LONGVARCHAR</jdbc-type>
            <jdbc-precision>2147483647</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>resultData</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>result_data</sql-name>
            <sql-type>LONGTEXT</sql-type>
            <jdbc-type>LONGVARCHAR</jdbc-type>
            <jdbc-precision>2147483647</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>formatFile</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>format_file</sql-name>
            <sql-type>LONGTEXT</sql-type>
            <jdbc-type>LONGVARCHAR</jdbc-type>
            <jdbc-precision>2147483647</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>isCurrent</java-name>
            <java-type>boolean</java-type>
            <java-default-value />
            <sql-name>is_current</sql-name>
            <sql-type>BIT</sql-type>
            <jdbc-type>BIT</jdbc-type>
            <jdbc-precision>0</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>recordStatus</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>record_status</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>1</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
        </column-list>
        <finder-list>
          <finder>
            <name>findByPrimaryKey</name>
            <multi-finder>false</multi-finder>
            <where>id = :id AND version_id = :versionId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>versionId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findAll</name>
            <multi-finder>true</multi-finder>
            <where />
            <order-by>id, version_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list />
          </finder>
          <finder>
            <name>findByPersistableObject</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findByReportCategory</name>
            <multi-finder>true</multi-finder>
            <where>category_id = :categoryId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>categoryId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by>id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereVersionIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>version_id = :versionId</where>
            <order-by>version_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>versionId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereNameEquals</name>
            <multi-finder>true</multi-finder>
            <where>name = :name</where>
            <order-by>name</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>name</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>45</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereDescriptionEquals</name>
            <multi-finder>true</multi-finder>
            <where>description = :description</where>
            <order-by>description</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>description</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>45</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereCategoryIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>category_id = :categoryId</where>
            <order-by>category_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>categoryId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereQueryTextEquals</name>
            <multi-finder>true</multi-finder>
            <where>query_text = :queryText</where>
            <order-by>query_text</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>queryText</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>LONGVARCHAR</jdbc-type>
                <jdbc-precision>2147483647</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereSelectPartEquals</name>
            <multi-finder>true</multi-finder>
            <where>select_part = :selectPart</where>
            <order-by>select_part</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>selectPart</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>LONGVARCHAR</jdbc-type>
                <jdbc-precision>2147483647</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereResultDataEquals</name>
            <multi-finder>true</multi-finder>
            <where>result_data = :resultData</where>
            <order-by>result_data</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>resultData</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>LONGVARCHAR</jdbc-type>
                <jdbc-precision>2147483647</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereFormatFileEquals</name>
            <multi-finder>true</multi-finder>
            <where>format_file = :formatFile</where>
            <order-by>format_file</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>formatFile</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>LONGVARCHAR</jdbc-type>
                <jdbc-precision>2147483647</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereIsCurrentEquals</name>
            <multi-finder>true</multi-finder>
            <where>is_current = :isCurrent</where>
            <order-by>is_current</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>isCurrent</java-name>
                <java-type>java.lang.Short</java-type>
                <jdbc-type>BIT</jdbc-type>
                <jdbc-precision>0</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereRecordStatusEquals</name>
            <multi-finder>true</multi-finder>
            <where>record_status = :recordStatus</where>
            <order-by>record_status</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>recordStatus</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>1</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
        </finder-list>
      </table>
      <table>
        <sql-name>report_execution_history</sql-name>
        <java-name>ReportExecutionHistory</java-name>
        <primary-key>
          <column-list>
            <column>id</column>
            <column>version_id</column>
          </column-list>
        </primary-key>
        <foreign-key-list>
          <foreign-key>
            <name>fk_report_execution_history_report_design</name>
            <parent-table>report_design</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>ReportDesign</nav-to-parent-term>
            <nav-to-child-term>ReportExecutionHistory</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>report_design_id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
              <column>
                <column-name>report_design_version_id</column-name>
                <ref-column-name>version_id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
          <foreign-key>
            <name>fk_report_execution_history_persistable_object</name>
            <parent-table>persistable_object</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>PersistableObject</nav-to-parent-term>
            <nav-to-child-term>ReportExecutionHistory1</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
        </foreign-key-list>
        <column-list>
          <column>
            <java-name>id</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>versionId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>version_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>executionResult</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>execution_result</sql-name>
            <sql-type>LONGTEXT</sql-type>
            <jdbc-type>LONGVARCHAR</jdbc-type>
            <jdbc-precision>2147483647</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>isCurrent</java-name>
            <java-type>boolean</java-type>
            <java-default-value />
            <sql-name>is_current</sql-name>
            <sql-type>BIT</sql-type>
            <jdbc-type>BIT</jdbc-type>
            <jdbc-precision>0</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>recordStatus</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>record_status</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>1</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>reportDesignId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>report_design_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>reportDesignVersionId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>report_design_version_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
        </column-list>
        <finder-list>
          <finder>
            <name>findByPrimaryKey</name>
            <multi-finder>false</multi-finder>
            <where>id = :id AND version_id = :versionId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>versionId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findAll</name>
            <multi-finder>true</multi-finder>
            <where />
            <order-by>id, version_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list />
          </finder>
          <finder>
            <name>findByReportDesign</name>
            <multi-finder>true</multi-finder>
            <where>report_design_id = :reportDesignId AND report_design_version_id = :reportDesignVersionId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>reportDesignId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>reportDesignVersionId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findByPersistableObject</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by>id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereVersionIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>version_id = :versionId</where>
            <order-by>version_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>versionId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereExecutionResultEquals</name>
            <multi-finder>true</multi-finder>
            <where>execution_result = :executionResult</where>
            <order-by>execution_result</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>executionResult</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>LONGVARCHAR</jdbc-type>
                <jdbc-precision>2147483647</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereIsCurrentEquals</name>
            <multi-finder>true</multi-finder>
            <where>is_current = :isCurrent</where>
            <order-by>is_current</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>isCurrent</java-name>
                <java-type>java.lang.Short</java-type>
                <jdbc-type>BIT</jdbc-type>
                <jdbc-precision>0</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereRecordStatusEquals</name>
            <multi-finder>true</multi-finder>
            <where>record_status = :recordStatus</where>
            <order-by>record_status</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>recordStatus</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>1</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereReportDesignIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>report_design_id = :reportDesignId</where>
            <order-by>report_design_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>reportDesignId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereReportDesignVersionIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>report_design_version_id = :reportDesignVersionId</where>
            <order-by>report_design_version_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>reportDesignVersionId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
        </finder-list>
      </table>
      <table>
        <sql-name>report_filter</sql-name>
        <java-name>ReportFilter</java-name>
        <primary-key>
          <column-list>
            <column>id</column>
          </column-list>
        </primary-key>
        <foreign-key-list>
          <foreign-key>
            <name>fk_report_filter_persistable_object</name>
            <parent-table>persistable_object</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>PersistableObject</nav-to-parent-term>
            <nav-to-child-term>ReportFilter</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
          <foreign-key>
            <name>fk_report_filter_report_column_operand1</name>
            <parent-table>report_column</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>ReportColumn</nav-to-parent-term>
            <nav-to-child-term>ReportFilter1</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>operand1_column_id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
              <column>
                <column-name>operand1_column_dataset_id</column-name>
                <ref-column-name>dataset_id</ref-column-name>
              </column>
              <column>
                <column-name>operand1_column_design_id</column-name>
                <ref-column-name>design_id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
          <foreign-key>
            <name>fk_report_filter_report_column_id</name>
            <parent-table>report_column</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>ReportColumn2</nav-to-parent-term>
            <nav-to-child-term>ReportFilter3</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>report_column_id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
              <column>
                <column-name>report_column_dataset_id</column-name>
                <ref-column-name>dataset_id</ref-column-name>
              </column>
              <column>
                <column-name>report_column_design_id</column-name>
                <ref-column-name>design_id</ref-column-name>
              </column>
              <column>
                <column-name>report_column_design_version_id</column-name>
                <ref-column-name>design_version_id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
        </foreign-key-list>
        <column-list>
          <column>
            <java-name>id</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>reportColumnId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>report_column_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>reportColumnDatasetId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>report_column_dataset_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>reportColumnDesignId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>report_column_design_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>reportColumnDesignVersionId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>report_column_design_version_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>prefix</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>prefix</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>45</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>operator</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>operator</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>45</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>suffix</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>suffix</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>45</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>operand1</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>operand1</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>255</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>operand2</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>operand2</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>255</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>operand1ColumnId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>operand1_column_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>operand1ColumnDatasetId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>operand1_column_dataset_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>operand1ColumnDesignId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>operand1_column_design_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>filterType</java-name>
            <java-type>java.lang.Integer</java-type>
            <java-default-value />
            <sql-name>filter_type</sql-name>
            <sql-type>INT</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
        </column-list>
        <finder-list>
          <finder>
            <name>findByPrimaryKey</name>
            <multi-finder>false</multi-finder>
            <where>id = :id</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereTypeEquals</name>
            <multi-finder>true</multi-finder>
            <where>type = :type</where>
            <order-by>type</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>type</java-name>
                <java-type>java.lang.Integer</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findAll</name>
            <multi-finder>true</multi-finder>
            <where />
            <order-by>id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list />
          </finder>
          <finder>
            <name>findByPersistableObject</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findByReportColumn</name>
            <multi-finder>true</multi-finder>
            <where>operand1_column_id = :operand1ColumnId AND operand1_column_dataset_id = :operand1ColumnDatasetId AND operand1_column_design_id = :operand1ColumnDesignId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>operand1ColumnId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>operand1ColumnDatasetId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>operand1ColumnDesignId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findByReportColumn2</name>
            <multi-finder>true</multi-finder>
            <where>report_column_id = :reportColumnId AND report_column_dataset_id = :reportColumnDatasetId AND report_column_design_id = :reportColumnDesignId AND report_column_design_version_id = :reportColumnDesignVersionId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>reportColumnId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>reportColumnDatasetId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>reportColumnDesignId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>reportColumnDesignVersionId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by>id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereReportColumnIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>report_column_id = :reportColumnId</where>
            <order-by>report_column_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>reportColumnId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereReportColumnDatasetIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>report_column_dataset_id = :reportColumnDatasetId</where>
            <order-by>report_column_dataset_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>reportColumnDatasetId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereReportColumnDesignIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>report_column_design_id = :reportColumnDesignId</where>
            <order-by>report_column_design_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>reportColumnDesignId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereReportColumnDesignVersionIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>report_column_design_version_id = :reportColumnDesignVersionId</where>
            <order-by>report_column_design_version_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>reportColumnDesignVersionId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWherePrefixEquals</name>
            <multi-finder>true</multi-finder>
            <where>prefix = :prefix</where>
            <order-by>prefix</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>prefix</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>45</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereOperatorEquals</name>
            <multi-finder>true</multi-finder>
            <where>operator = :operator</where>
            <order-by>operator</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>operator</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>45</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereSuffixEquals</name>
            <multi-finder>true</multi-finder>
            <where>suffix = :suffix</where>
            <order-by>suffix</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>suffix</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>45</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereOperand1Equals</name>
            <multi-finder>true</multi-finder>
            <where>operand1 = :operand1</where>
            <order-by>operand1</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>operand1</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>255</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereOperand2Equals</name>
            <multi-finder>true</multi-finder>
            <where>operand2 = :operand2</where>
            <order-by>operand2</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>operand2</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>255</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereFilterTypeEquals</name>
            <multi-finder>true</multi-finder>
            <where>filter_type = :filterType</where>
            <order-by>filter_type</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>filterType</java-name>
                <java-type>java.lang.Integer</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereOperand1ColumnIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>operand1_column_id = :operand1ColumnId</where>
            <order-by>operand1_column_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>operand1ColumnId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereOperand1ColumnDatasetIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>operand1_column_dataset_id = :operand1ColumnDatasetId</where>
            <order-by>operand1_column_dataset_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>operand1ColumnDatasetId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereOperand1ColumnDesignIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>operand1_column_design_id = :operand1ColumnDesignId</where>
            <order-by>operand1_column_design_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>operand1ColumnDesignId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
        </finder-list>
      </table>
      <table>
        <sql-name>report_format</sql-name>
        <java-name>ReportFormat</java-name>
        <primary-key>
          <column-list>
            <column>version_id</column>
            <column>id</column>
          </column-list>
        </primary-key>
        <foreign-key-list>
          <foreign-key>
            <name>fk_report_format_report_design1</name>
            <parent-table>report_design</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>ReportDesign</nav-to-parent-term>
            <nav-to-child-term>ReportFormat</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>report_design_id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
              <column>
                <column-name>report_design_version_id</column-name>
                <ref-column-name>version_id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
          <foreign-key>
            <name>fk_report_format_persistable_object1</name>
            <parent-table>persistable_object</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>PersistableObject</nav-to-parent-term>
            <nav-to-child-term>ReportFormat1</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
        </foreign-key-list>
        <column-list>
          <column>
            <java-name>id</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>versionId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>version_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>true</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>formatFile</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>format_file</sql-name>
            <sql-type>LONGTEXT</sql-type>
            <jdbc-type>LONGVARCHAR</jdbc-type>
            <jdbc-precision>2147483647</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>isCurrent</java-name>
            <java-type>boolean</java-type>
            <java-default-value />
            <sql-name>is_current</sql-name>
            <sql-type>BIT</sql-type>
            <jdbc-type>BIT</jdbc-type>
            <jdbc-precision>0</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>recordStatus</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>record_status</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>1</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>reportDesignId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>report_design_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>reportDesignVersionId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>report_design_version_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
        </column-list>
        <finder-list>
          <finder>
            <name>findByPrimaryKey</name>
            <multi-finder>false</multi-finder>
            <where>version_id = :versionId AND id = :id</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>versionId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findAll</name>
            <multi-finder>true</multi-finder>
            <where />
            <order-by>version_id, id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list />
          </finder>
          <finder>
            <name>findByReportDesign</name>
            <multi-finder>true</multi-finder>
            <where>report_design_id = :reportDesignId AND report_design_version_id = :reportDesignVersionId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>reportDesignId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>reportDesignVersionId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findByPersistableObject</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by>id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereVersionIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>version_id = :versionId</where>
            <order-by>version_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>versionId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereFormatFileEquals</name>
            <multi-finder>true</multi-finder>
            <where>format_file = :formatFile</where>
            <order-by>format_file</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>formatFile</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>LONGVARCHAR</jdbc-type>
                <jdbc-precision>2147483647</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereIsCurrentEquals</name>
            <multi-finder>true</multi-finder>
            <where>is_current = :isCurrent</where>
            <order-by>is_current</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>isCurrent</java-name>
                <java-type>java.lang.Short</java-type>
                <jdbc-type>BIT</jdbc-type>
                <jdbc-precision>0</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereRecordStatusEquals</name>
            <multi-finder>true</multi-finder>
            <where>record_status = :recordStatus</where>
            <order-by>record_status</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>recordStatus</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>1</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereReportDesignIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>report_design_id = :reportDesignId</where>
            <order-by>report_design_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>reportDesignId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereReportDesignVersionIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>report_design_version_id = :reportDesignVersionId</where>
            <order-by>report_design_version_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>reportDesignVersionId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
        </finder-list>
      </table>
      <table>
        <sql-name>table_mapping</sql-name>
        <java-name>TableMapping</java-name>
        <primary-key>
          <column-list>
            <column>id</column>
          </column-list>
        </primary-key>
        <foreign-key-list>
          <foreign-key>
            <name>fk_table_mapping_persistable_object</name>
            <parent-table>persistable_object</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>PersistableObject</nav-to-parent-term>
            <nav-to-child-term>TableMapping</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
          <foreign-key>
            <name>fk_table_mapping_db_config</name>
            <parent-table>db_config</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>DbConfig</nav-to-parent-term>
            <nav-to-child-term>TableMapping1</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>db_config_id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
        </foreign-key-list>
        <column-list>
          <column>
            <java-name>id</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>dbConfigId</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>db_config_id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>tableName</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>table_name</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>255</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>mappedName</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>mapped_name</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>255</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>activeForManager</java-name>
            <java-type>boolean</java-type>
            <java-default-value />
            <sql-name>active_for_manager</sql-name>
            <sql-type>BIT</sql-type>
            <jdbc-type>BIT</jdbc-type>
            <jdbc-precision>0</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>activeForUser</java-name>
            <java-type>boolean</java-type>
            <java-default-value />
            <sql-name>active_for_user</sql-name>
            <sql-type>BIT</sql-type>
            <jdbc-type>BIT</jdbc-type>
            <jdbc-precision>0</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>mappedType</java-name>
            <java-type>java.lang.Integer</java-type>
            <java-default-value />
            <sql-name>mapped_type</sql-name>
            <sql-type>INT</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
        </column-list>
        <finder-list>
          <finder>
            <name>findByPrimaryKey</name>
            <multi-finder>false</multi-finder>
            <where>id = :id</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereTypeEquals</name>
            <multi-finder>true</multi-finder>
            <where>type = :type</where>
            <order-by>type</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>type</java-name>
                <java-type>java.lang.Integer</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findAll</name>
            <multi-finder>true</multi-finder>
            <where />
            <order-by>id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list />
          </finder>
          <finder>
            <name>findByPersistableObject</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findByDbConfig</name>
            <multi-finder>true</multi-finder>
            <where>db_config_id = :dbConfigId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>dbConfigId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by>id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereDbConfigIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>db_config_id = :dbConfigId</where>
            <order-by>db_config_id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>dbConfigId</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereTableNameEquals</name>
            <multi-finder>true</multi-finder>
            <where>table_name = :tableName</where>
            <order-by>table_name</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>tableName</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>255</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereMappedNameEquals</name>
            <multi-finder>true</multi-finder>
            <where>mapped_name = :mappedName</where>
            <order-by>mapped_name</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>mappedName</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>255</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereMappedTypeEquals</name>
            <multi-finder>true</multi-finder>
            <where>mapped_type = :mappedType</where>
            <order-by>mapped_type</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>mappedType</java-name>
                <java-type>java.lang.Integer</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereActiveForManagerEquals</name>
            <multi-finder>true</multi-finder>
            <where>active_for_manager = :activeForManager</where>
            <order-by>active_for_manager</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>activeForManager</java-name>
                <java-type>java.lang.Short</java-type>
                <jdbc-type>BIT</jdbc-type>
                <jdbc-precision>0</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereActiveForUserEquals</name>
            <multi-finder>true</multi-finder>
            <where>active_for_user = :activeForUser</where>
            <order-by>active_for_user</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>activeForUser</java-name>
                <java-type>java.lang.Short</java-type>
                <jdbc-type>BIT</jdbc-type>
                <jdbc-precision>0</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
        </finder-list>
      </table>
      <table>
        <sql-name>users</sql-name>
        <java-name>Users</java-name>
        <primary-key>
          <column-list>
            <column>username</column>
          </column-list>
        </primary-key>
        <foreign-key-list>
          <foreign-key>
            <name>fk_usr_persistable_object</name>
            <parent-table>persistable_object</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>PersistableObject</nav-to-parent-term>
            <nav-to-child-term>Users</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>id</column-name>
                <ref-column-name>id</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
        </foreign-key-list>
        <column-list>
          <column>
            <java-name>id</java-name>
            <java-type>java.lang.Long</java-type>
            <java-default-value />
            <sql-name>id</sql-name>
            <sql-type>BIGINT UNSIGNED</sql-type>
            <jdbc-type>BIGINT</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>true</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>username</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>username</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>50</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>password</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>password</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>50</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>enabled</java-name>
            <java-type>boolean</java-type>
            <java-default-value />
            <sql-name>enabled</sql-name>
            <sql-type>BIT</sql-type>
            <jdbc-type>BIT</jdbc-type>
            <jdbc-precision>0</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
        </column-list>
        <finder-list>
          <finder>
            <name>findByPrimaryKey</name>
            <multi-finder>false</multi-finder>
            <where>username = :username</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>username</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>50</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findAll</name>
            <multi-finder>true</multi-finder>
            <where />
            <order-by>username</order-by>
            <query-type>WHERE</query-type>
            <parameter-list />
          </finder>
          <finder>
            <name>findByPersistableObject</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>id = :id</where>
            <order-by>id</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>id</java-name>
                <java-type>java.lang.Long</java-type>
                <jdbc-type>BIGINT</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereUsernameEquals</name>
            <multi-finder>true</multi-finder>
            <where>username = :username</where>
            <order-by>username</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>username</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>50</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWherePasswordEquals</name>
            <multi-finder>true</multi-finder>
            <where>password = :password</where>
            <order-by>password</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>password</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>50</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereEnabledEquals</name>
            <multi-finder>true</multi-finder>
            <where>enabled = :enabled</where>
            <order-by>enabled</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>enabled</java-name>
                <java-type>java.lang.Short</java-type>
                <jdbc-type>BIT</jdbc-type>
                <jdbc-precision>0</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
        </finder-list>
      </table>
    </table-list>
    <view-list />
    <procedure-list />
    <custom-sql-list />
  </database>
  <provider-options>
    <default-codegen-provider>spring</default-codegen-provider>
    <provider name="j2ee">
      <property key="app-name" value="EURB" />
      <property key="dao-strategy" value="jdbc" />
      <property key="datasource-name" value="jdbc/myapp" />
      <property key="delete-files" value="true" />
      <property key="dto-fields-public" value="false" />
      <property key="generate-dynamic-inserts" value="false" />
      <property key="generate-dynamic-updates" value="false" />
      <property key="generate-session-beans" value="true" />
      <property key="jdbc-driver" value="MySQL" />
      <property key="jdbc-pwd" value="mohamad" />
      <property key="jdbc-url" value="jdbc:mysql://localhost/mysql" />
      <property key="jdbc-user" value="root" />
      <property key="logging" value="log4j" />
      <property key="output-dir" value="/Users/dashti/Documents/eurbworkspace/EURB/doc/Technical/Design/FireStormDAOGen/db/gen-j2ee" />
      <property key="overwrite-resource-manager" value="true" />
      <property key="package-name" value="com.sharifpro.eurb" />
      <property key="prefix-schema-name" value="true" />
      <property key="target-platform" value="Jakarta Tomcat 5" />
      <property key="use-jndi" value="false" />
      <property key="web-app-strategy" value="struts" />
      <property key="web-service-strategy" value="axis" />
    </provider>
    <provider name="j2se">
      <property key="app-name" value="EURB" />
      <property key="dao-strategy" value="jdbc" />
      <property key="delete-files" value="true" />
      <property key="dto-fields-public" value="false" />
      <property key="generate-dynamic-inserts" value="true" />
      <property key="generate-dynamic-updates" value="true" />
      <property key="jdbc-driver" value="com.mysql.jdbc.Driver" />
      <property key="jdbc-pwd" value="mohamad" />
      <property key="jdbc-table-aliases" value="false" />
      <property key="jdbc-url" value="jdbc:mysql://localhost/mysql" />
      <property key="jdbc-user" value="root" />
      <property key="jdbc30-capable" value="true" />
      <property key="logging" value="log4j" />
      <property key="output-dir" value="/Users/dashti/Documents/eurbworkspace/EURB/doc/Technical/Design/FireStormDAOGen/db/gen-firestorm-j2se-onlymodified" />
      <property key="overwrite-resource-manager" value="true" />
      <property key="package-name" value="com.sharifpro.eurb" />
      <property key="prefix-schema-name" value="false" />
    </provider>
    <provider name="spring">
      <property key="app-name" value="EURB" />
      <property key="dao-strategy" value="jdbc" />
      <property key="delete-files" value="true" />
      <property key="dto-fields-public" value="false" />
      <property key="generate-dynamic-inserts" value="false" />
      <property key="generate-dynamic-updates" value="false" />
      <property key="generate.ant.script" value="true" />
      <property key="generate.maven.script" value="false" />
      <property key="jdbc-driver" value="com.mysql.jdbc.Driver" />
      <property key="jdbc-pwd" value="mohamad" />
      <property key="jdbc-url" value="jdbc:mysql://localhost/mysql" />
      <property key="jdbc-user" value="root" />
      <property key="logging" value="log4j" />
      <property key="output-dir" value="/Users/dashti/Documents/eurbworkspace/EURB/doc/Technical/Design/FireStormDAOGen/db/spring-gen-withcatalog" />
      <property key="overwrite-resource-manager" value="true" />
      <property key="package-name" value="com.sharifpro.eurb" />
      <property key="prefix-schema-name" value="true" />
    </provider>
    <provider name="sql" />
  </provider-options>
</firestorm-project>

