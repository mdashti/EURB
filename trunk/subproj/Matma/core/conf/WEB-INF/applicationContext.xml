<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:ws="http://jax-ws.dev.java.net/spring/core"
	xmlns:wss="http://jax-ws.dev.java.net/spring/servlet"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://jax-ws.dev.java.net/spring/core http://jax-ws.dev.java.net/spring/core.xsd
	http://jax-ws.dev.java.net/spring/servlet http://jax-ws.dev.java.net/spring/servlet.xsd">
	<util:properties id="applicationProps" location="/WEB-INF/application.properties"/>
	
	<bean id="contextApplicationContextProvider" class="com.sharifpro.util.SharifProApplicationContext"></bean> 

	<bean id="EURBDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="#{applicationProps['application.jdbc.driver']}" />
		<property name="url" value="#{applicationProps['application.jdbc.url']}" />
		<property name="username" value="#{applicationProps['application.jdbc.username']}" />
		<property name="password" value="#{applicationProps['application.jdbc.password']}" />
		<property name="maxIdle" value="#{applicationProps['application.jdbc.maxIdle']}" />
		<property name="maxActive" value="#{applicationProps['application.jdbc.maxActive']}" />
	</bean>
	
	<bean id="userDetailsService" class="com.sharifpro.eurb.management.security.dao.impl.UserDetailsServiceImpl">
		<property name="dataSource" ref="EURBDataSource"/>
		<property name="enableGroups" value="true"/>
		<property name="enableAuthorities" value="true"/>
	</bean>
	
	<!--bean class="org.springframework.security.authentication.dao.ReflectionSaltSource" id="saltSource">
			<property name="userPropertyToUse" value="username"/>
		</bean-->

	<bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" id="passwordEncoder" />
    
	<!--security:debug /-->
	<!-- Start Authentication/Auhorization Config -->
	<security:authentication-manager id="authManager">
		<security:authentication-provider user-service-ref="userDetailsService">
			<security:password-encoder ref="passwordEncoder"> 
				<!--security:salt-source ref="saltSource"/-->
			</security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>

	<security:http pattern="/resources-#{applicationProps['application.version']}/**" security="none" />
	<security:http pattern="/ws/**" security="none" />
	<security:http use-expressions="true" auto-config="false" entry-point-ref="authenticationEntryPoint" authentication-manager-ref="authManager">
		<security:intercept-url pattern="/login.spy*" access="isAnonymous()"/>
		<security:intercept-url pattern="/403.spy*" access="isAuthenticated()"/>
		<security:intercept-url pattern="/404.spy*" access="isAuthenticated()"/>
		
		<security:intercept-url pattern="/index/findUserAlerts.spy*" access="isAuthenticated()" />
		<security:intercept-url pattern="/index/alertRemove.spy*" access="isAuthenticated()" />
		
		<security:intercept-url pattern="/management/mapping/dbconfig.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_BASE_DB_CONFIG_VIEW_LIST)" />
		<security:intercept-url pattern="/management/mapping/dbconfig/dbconfigSearch.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_BASE_DB_CONFIG_VIEW_LIST)" />
		<security:intercept-url pattern="/management/mapping/dbconfig/dbconfigStore.spy*" access="hasAnyRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_BASE_DB_CONFIG_EDIT, T(com.sharifpro.eurb.info.AuthorityType).ROLE_BASE_DB_CONFIG_CREATE)" />
		<security:intercept-url pattern="/management/mapping/dbconfig/dbconfigRemove.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_BASE_DB_CONFIG_DELETE)" />
		<security:intercept-url pattern="/management/mapping/dbconfig/dbconfigActivate.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_BASE_DB_CONFIG_EDIT)" />
		<security:intercept-url pattern="/management/mapping/dbconfig/dbconfigDeactivate.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_BASE_DB_CONFIG_EDIT)" />

		<security:intercept-url pattern="/management/mapping/db*-table.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_BASE_TABLE_MAPPING_VIEW_LIST)" />
		<security:intercept-url pattern="/management/mapping/table/tableSearch.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_BASE_TABLE_MAPPING_VIEW_LIST)" />
		<security:intercept-url pattern="/management/mapping/table/tableStore.spy*" access="hasAnyRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_BASE_TABLE_MAPPING_EDIT, T(com.sharifpro.eurb.info.AuthorityType).ROLE_BASE_TABLE_MAPPING_CREATE)" />
		<security:intercept-url pattern="/management/mapping/table/tableActivate.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_BASE_TABLE_MAPPING_EDIT)" />
		<security:intercept-url pattern="/management/mapping/table/tableDeactivate.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_BASE_TABLE_MAPPING_EDIT)" />

		<security:intercept-url pattern="/management/mapping/db*-table*-column.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_BASE_COL_MAPPING_VIEW_LIST)" />
		<security:intercept-url pattern="/management/mapping/column/columnSearch.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_BASE_COL_MAPPING_VIEW_LIST)" />
		<security:intercept-url pattern="/management/mapping/column/columnStore.spy*" access="hasAnyRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_BASE_COL_MAPPING_EDIT, T(com.sharifpro.eurb.info.AuthorityType).ROLE_BASE_COL_MAPPING_CREATE)" />
		<security:intercept-url pattern="/management/mapping/column/columnActivate.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_BASE_COL_MAPPING_EDIT)" />
		<security:intercept-url pattern="/management/mapping/column/columnDeactivate.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_BASE_COL_MAPPING_EDIT)" />
		<security:intercept-url pattern="/management/mapping/column/columnMove.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_BASE_COL_MAPPING_EDIT)" />

		<security:intercept-url pattern="/builder/category/report*-category.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_BASE_CATEGORY_MANAGEMENT_VIEW_LIST)" />
		<security:intercept-url pattern="/builder/category/reportCategorySearch.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_BASE_CATEGORY_MANAGEMENT_VIEW_LIST)" />
		<security:intercept-url pattern="/builder/category/reportCategoryStore.spy*" access="hasAnyRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_BASE_CATEGORY_MANAGEMENT_EDIT, T(com.sharifpro.eurb.info.AuthorityType).ROLE_BASE_CATEGORY_MANAGEMENT_CREATE)" />
		<security:intercept-url pattern="/builder/category/reportCategoryRemove.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_BASE_CATEGORY_MANAGEMENT_DELETE)" />

		<security:intercept-url pattern="/management/security/user.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_SEC_USER_MANAGEMENT_VIEW_LIST)" />
		<security:intercept-url pattern="/management/security/user/userSearch.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_SEC_USER_MANAGEMENT_VIEW_LIST)" />
		<security:intercept-url pattern="/management/security/user/userStore.spy*" access="hasAnyRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_SEC_USER_MANAGEMENT_EDIT, T(com.sharifpro.eurb.info.AuthorityType).ROLE_SEC_USER_MANAGEMENT_CREATE)" />
		<security:intercept-url pattern="/management/security/user/userRemove.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_SEC_USER_MANAGEMENT_DELETE)" />
		<security:intercept-url pattern="/management/security/user/userActivate.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_SEC_USER_MANAGEMENT_EDIT)" />
		<security:intercept-url pattern="/management/security/user/userDeactivate.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_SEC_USER_MANAGEMENT_EDIT)" />
		<security:intercept-url pattern="/management/security/user/currentUserGroups.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_SEC_USER_MANAGEMENT_VIEW)" />
		<security:intercept-url pattern="/management/security/user/selectableUserGroups.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_SEC_USER_MANAGEMENT_VIEW)" />
		<security:intercept-url pattern="/management/security/user/addUserToGroupsAction.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_SEC_USER_MANAGEMENT_EDIT)" />
		<security:intercept-url pattern="/management/security/user/removeUserFromGroupsAction.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_SEC_USER_MANAGEMENT_EDIT)" />

		<security:intercept-url pattern="/management/security/group.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_SEC_GROUP_MANAGEMENT_VIEW_LIST)" />
		<security:intercept-url pattern="/management/security/group/groupSearch.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_SEC_GROUP_MANAGEMENT_VIEW_LIST)" />
		<security:intercept-url pattern="/management/security/group/groupStore.spy*" access="hasAnyRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_SEC_GROUP_MANAGEMENT_EDIT, T(com.sharifpro.eurb.info.AuthorityType).ROLE_SEC_GROUP_MANAGEMENT_CREATE)" />
		<security:intercept-url pattern="/management/security/group/groupRemove.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_SEC_GROUP_MANAGEMENT_DELETE)" />
		<security:intercept-url pattern="/management/security/group/currentGroupUsers.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_SEC_GROUP_MANAGEMENT_VIEW)" />
		<security:intercept-url pattern="/management/security/group/selectableGroupUsers.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_SEC_GROUP_MANAGEMENT_VIEW)" />
		<security:intercept-url pattern="/management/security/group/addGroupToUsersAction.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_SEC_GROUP_MANAGEMENT_EDIT)" />
		<security:intercept-url pattern="/management/security/group/removeGroupFromUsersAction.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_SEC_GROUP_MANAGEMENT_EDIT)" />

		<security:intercept-url pattern="/management/security/authorities*.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_SEC_ROLE_MANAGEMENT_VIEW_LIST)" />
		<security:intercept-url pattern="/management/security/authorities/authoritiesSearch.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_SEC_ROLE_MANAGEMENT_VIEW)" />
		<security:intercept-url pattern="/management/security/authorities/authoritiesStore.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_SEC_ROLE_MANAGEMENT_EDIT)" />

		<security:intercept-url pattern="/builder/schedule/schedule.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_RPG_REPORT_SCHEDULER_VIEW_LIST)" />
		<security:intercept-url pattern="/builder/schedule/findUserScheduled.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_RPG_REPORT_SCHEDULER_VIEW_LIST)" />
		<security:intercept-url pattern="/builder/schedule/scheduleStore.spy*" access="hasAnyRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_RPG_REPORT_SCHEDULER_EDIT, T(com.sharifpro.eurb.info.AuthorityType).ROLE_RPG_REPORT_SCHEDULER_CREATE)" />
		<security:intercept-url pattern="/builder/schedule/scheduleRemove.spy*" access="hasRole(T(com.sharifpro.eurb.info.AuthorityType).ROLE_RPG_REPORT_SCHEDULER_DELETE)" />
		<security:intercept-url pattern="/**" access="isAuthenticated()" />
		<security:custom-filter position="FORM_LOGIN_FILTER" ref="authenticationProcessingFilter"/>
		<security:custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
		<security:custom-filter after="SESSION_MANAGEMENT_FILTER" ref="sessionRegistryFixFilter"/>
		<security:session-management invalid-session-url="/login.spy" session-authentication-strategy-ref="sas">
			<!--concurrency-control max-sessions="-1" error-if-maximum-exceeded="true" session-authentication-error-url="/login.spy" /-->
		</security:session-management>
		<security:logout logout-url="/logout.spy" logout-success-url="/login.spy" delete-cookies="JSESSIONID"/>
		<security:remember-me data-source-ref="EURBDataSource"/>
		<security:access-denied-handler error-page="/403.jsp"/>
	</security:http>
	<security:global-method-security secured-annotations="enabled" />

	<bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" scope="singleton" />

	<bean id="sessionRegistryFixFilter" class="com.sharifpro.util.filter.SessionRegistryFixFilter">
		<property name="sessionRegistry" ref="sessionRegistry"/>
	</bean>

	<bean id="sas" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
		<constructor-arg name="sessionRegistry" ref="sessionRegistry" />
		<property name="maximumSessions" value="-1" />
	</bean>

	<bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<property name="sessionRegistry" ref="sessionRegistry" />
		<property name="expiredUrl" value="/login.spy" />
	</bean>

	<bean id="authenticationProcessingFilter" class="com.sharifpro.filter.AuthenticationProcessingFilter">
		<property name="sessionAuthenticationStrategy" ref="sas" />
		<property name="authenticationManager" ref="authManager" />
		<property name="authenticationSuccessHandler">
			<bean class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler" />
		</property>
	</bean>
	
	<bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<property name="loginFormUrl" value="/login.spy" />
		<property name="forceHttps" value="false" />
	</bean>
	<!-- Finish Authentication/Auhorization Config -->

	<tx:annotation-driven transaction-manager="txManager" />
	
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
		<property name="dataSource" ref="EURBDataSource" />
	</bean>
	
	<!-- Application Message Bundle -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="/WEB-INF/messages/messages" />
		<property name="cacheSeconds" value="0" />
	</bean>
	
	<!-- Scans the classpath of this application for @Components to deploy as 
		beans -->
	<context:component-scan base-package="com.sharifpro" />

	<!-- Configures the @Controller programming model -->
	<mvc:annotation-driven />

	<!-- misc -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="quartzDataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="#{applicationProps['quartz.jdbc.driver']}" />
		<property name="url" value="#{applicationProps['quartz.jdbc.url']}" />
		<property name="username" value="#{applicationProps['quartz.jdbc.username']}" />
		<property name="password" value="#{applicationProps['quartz.jdbc.password']}" />
		<property name="maxIdle" value="#{applicationProps['quartz.jdbc.maxIdle']}" />
		<property name="maxActive" value="#{applicationProps['quartz.jdbc.maxActive']}" />   
	</bean>
    
	<bean id="scheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="dataSource" ref="quartzDataSource" />
		<property name="applicationContextSchedulerContextKey" value="applicationContext"/>
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.scheduler.instanceName">ReportScheduler</prop>
				<prop key="org.quartz.scheduler.instanceId">AUTO</prop>
				<prop key="org.quartz.scheduler.skipUpdateCheck">true</prop>
				<prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
				<prop key="org.quartz.threadPool.threadCount">#{applicationProps['org.quartz.threadPool.threadCount']}</prop>      
				<prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>
				<prop key="org.quartz.jobStore.isClustered">false</prop>
				<prop key="org.quartz.jobStore.useProperties">false</prop>
				<prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop>
				<prop key="org.quartz.jobStore.driverDelegateClass">#{applicationProps['quartz.jobStore.driverDelegateClass']}</prop>
				<prop key="org.quartz.jobStore.selectWithLockSQL">#{applicationProps['quartz.jobStore.selectWithLockSQL']}</prop>
			</props>
		</property>
	</bean>
	<!-- Forwards requests to the "/" resource to the "welcome" view -->
	<mvc:view-controller path="/" view-name="index"/>

	<!-- Configures Handler Interceptors -->
	<!-- mvc:interceptors>
			<!- Changes the locale when a 'locale' request parameter is sent; e.g. /?locale=de ->
			<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
		</mvc:interceptors-->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
	<mvc:resources mapping="/resources-#{applicationProps['application.version']}/**" location="/resources/" cache-period="31556926"/>

	<!-- Saves a locale change using a cookie -->
	<!-- bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver" /-->

	<!-- Application Message Bundle -->
	<!-- bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
			<property name="basename" value="/WEB-INF/messages/messages" />
			<property name="cacheSeconds" value="0" />
		</bean-->

	<bean id="mailAuthenticator" class="com.sharifpro.eurb.builder.util.SMTPAuthenticator">
		<constructor-arg index="0" value="isatisweb.com@gmail.com" />
		<constructor-arg index="1" value="isatiswebeurb" />
	</bean>

	<bean id="mailSession" class="javax.mail.Session" factory-method="getInstance">
		<constructor-arg index="0">
			<props>
				<prop key="mail.smtp.host">smtp.gmail.com</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.port">465</prop>
				<prop key="mail.smtp.user">isatisweb.com@gmail.com</prop>
				<prop key="password">isatiswebeurb</prop>
				<prop key="mail.smtp.from">isatisweb.com@gmail.com</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
				<prop key="mail.debug">true</prop>
			</props>
		</constructor-arg>
		<constructor-arg index="1" ref="mailAuthenticator" />
	</bean>
	
	<bean id="servletContext" class="org.springframework.web.context.support.ServletContextFactoryBean"/>
	
	<bean id="AuthoritiesDao" class="com.sharifpro.eurb.management.security.dao.impl.AuthoritiesDaoImpl" scope="singleton">
		<property name="dataSource" ref="EURBDataSource" />
	</bean>
	<bean id="ColumnMappingDao" class="com.sharifpro.eurb.management.mapping.dao.impl.ColumnMappingDaoImpl" scope="singleton">
		<property name="dataSource" ref="EURBDataSource" />
	</bean>
	<bean id="DbConfigDao" class="com.sharifpro.eurb.management.mapping.dao.impl.DbConfigDaoImpl" scope="singleton">
		<property name="dataSource" ref="EURBDataSource" />
	</bean>
	<bean id="GroupAggregationDao" class="com.sharifpro.eurb.builder.dao.impl.GroupAggregationDaoImpl" scope="singleton">
		<property name="dataSource" ref="EURBDataSource" />
	</bean>
	<bean id="GroupAuthoritiesDao" class="com.sharifpro.eurb.management.security.dao.impl.GroupAuthoritiesDaoImpl" scope="singleton">
		<property name="dataSource" ref="EURBDataSource" />
	</bean>
	<bean id="GroupMembersDao" class="com.sharifpro.eurb.management.security.dao.impl.GroupMembersDaoImpl" scope="singleton">
		<property name="dataSource" ref="EURBDataSource" />
	</bean>
	<bean id="GroupsDao" class="com.sharifpro.eurb.management.security.dao.impl.GroupsDaoImpl" scope="singleton">
		<property name="dataSource" ref="EURBDataSource" />
	</bean>
	<bean id="PersistableObjectDao" class="com.sharifpro.eurb.management.mapping.dao.impl.PersistableObjectDaoImpl" scope="singleton">
		<property name="dataSource" ref="EURBDataSource" />
	</bean>
	<bean id="ReportCategoryDao" class="com.sharifpro.eurb.builder.dao.impl.ReportCategoryDaoImpl" scope="singleton">
		<property name="dataSource" ref="EURBDataSource" />
	</bean>
	<bean id="ReportColumnDao" class="com.sharifpro.eurb.builder.dao.impl.ReportColumnDaoImpl" scope="singleton">
		<property name="dataSource" ref="EURBDataSource" />
	</bean>
	<bean id="ReportDatasetDao" class="com.sharifpro.eurb.builder.dao.impl.ReportDatasetDaoImpl" scope="singleton">
		<property name="dataSource" ref="EURBDataSource" />
	</bean>
	<bean id="ReportChartDao" class="com.sharifpro.eurb.builder.dao.impl.ReportChartDaoImpl" scope="singleton">
		<property name="dataSource" ref="EURBDataSource" />
	</bean>
	<bean id="ReportChartAxisDao" class="com.sharifpro.eurb.builder.dao.impl.ReportChartAxisDaoImpl" scope="singleton">
		<property name="dataSource" ref="EURBDataSource" />
	</bean>
	<bean id="ObjectConfigDao" class="com.sharifpro.eurb.builder.dao.impl.ObjectConfigDaoImpl" scope="singleton">
		<property name="dataSource" ref="EURBDataSource" />
	</bean>
	<bean id="ReportDesignDao" class="com.sharifpro.eurb.builder.dao.impl.ReportDesignDaoImpl" scope="singleton">
		<property name="dataSource" ref="EURBDataSource" />
	</bean>
	<bean id="ReportExecutionHistoryDao" class="com.sharifpro.eurb.builder.dao.impl.ReportExecutionHistoryDaoImpl" scope="singleton">
		<property name="dataSource" ref="EURBDataSource" />
	</bean>
	<bean id="ReportFilterDao" class="com.sharifpro.eurb.builder.dao.impl.ReportFilterDaoImpl" scope="singleton">
		<property name="dataSource" ref="EURBDataSource" />
	</bean>
	<bean id="ReportFormatDao" class="com.sharifpro.eurb.builder.dao.impl.ReportFormatDaoImpl" scope="singleton">
		<property name="dataSource" ref="EURBDataSource" />
	</bean>
	<bean id="TableMappingDao" class="com.sharifpro.eurb.management.mapping.dao.impl.TableMappingDaoImpl" scope="singleton">
		<property name="dataSource" ref="EURBDataSource" />
	</bean>
	<bean id="UserDao" class="com.sharifpro.eurb.management.security.dao.impl.UserDaoImpl" scope="singleton">
		<property name="dataSource" ref="EURBDataSource" />
		<property name="authoritiesDao" ref="AuthoritiesDao" />
	</bean>
	<bean id="MailProvider" class="com.sharifpro.eurb.builder.provider.MailProvider" scope="singleton">
		<property name="dataSource" ref="EURBDataSource" />
	</bean>
	<bean id="DirectoryProvider" class="com.sharifpro.eurb.builder.provider.DirectoryProvider" scope="singleton">
		<property name="dataSource" ref="EURBDataSource" />
		<property name="servletContext" ref="servletContext" />
	</bean>
	<bean id="ReportLogDao" class="com.sharifpro.eurb.builder.dao.impl.ReportLogDaoImpl" scope="singleton">
		<property name="dataSource" ref="EURBDataSource" />
	</bean>
	<bean id="ReportAlertDao" class="com.sharifpro.eurb.builder.dao.impl.ReportAlertDaoImpl" scope="singleton">
		<property name="dataSource" ref="EURBDataSource" />
		<property name="dataSourceProvider" ref="ReportDesignDao" />
		<property name="reportLogDao" ref="ReportLogDao" />
	</bean>
	<bean id="fileSystemDeliveryMethod"
		class="com.sharifpro.eurb.builder.delivery.FileSystemDeliveryMethod">
		<property name="directoryProvider" ref="DirectoryProvider" />
		<property name="mailProvider" ref="MailProvider" /> 	
	</bean>
	<bean id="emailDeliveryMethod" class="com.sharifpro.eurb.builder.delivery.EMailDeliveryMethod">  	
		<property name="mailProvider" ref="MailProvider" /> 	
	</bean>
	<bean id="ReportScheduleDao" class="com.sharifpro.eurb.builder.dao.impl.ReportScheduleDaoImpl" scope="singleton" > 
		<property name="scheduler" ref="scheduler" />
		<property name="dataSource" ref="EURBDataSource" />
	</bean>
	<bean id="UserMessageDao" class="com.sharifpro.eurb.builder.dao.impl.UserMessageDaoImpl" scope="singleton">
		<property name="dataSource" ref="EURBDataSource" />
	</bean>

	<!-- MATMA WEB SERVICES -->
	<wss:binding url="/ws/UserInfoService">
		<wss:service>
			<ws:service bean="#UserInfoService"/>
		</wss:service>
	</wss:binding>

	<!-- Web service methods -->
	<bean id="UserInfoService" class="com.sharifpro.matma.ws.UserInfoServiceEndpoint">
	</bean>
</beans>