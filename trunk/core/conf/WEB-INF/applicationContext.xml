<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:ws="http://jax-ws.dev.java.net/spring/core"
	xmlns:wss="http://jax-ws.dev.java.net/spring/servlet"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://jax-ws.dev.java.net/spring/core http://jax-ws.dev.java.net/spring/core.xsd
	http://jax-ws.dev.java.net/spring/servlet http://jax-ws.dev.java.net/spring/servlet.xsd">
	<util:properties id="applicationProps" location="/WEB-INF/application.properties"/>
	
	<bean id="contextApplicationContextProvider" class="com.sharifpro.util.SharifProApplicationContext"></bean> 

	<bean id="EURBDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="#{applicationProps['application.jdbc.driver']}" />
		<property name="url" value="#{applicationProps['application.jdbc.url']}" />
		<property name="username" value="#{applicationProps['application.jdbc.username']}" />
		<property name="password" value="#{applicationProps['application.jdbc.password']}" />
		<property name="maxIdle" value="#{applicationProps['application.jdbc.maxIdle']}" />
		<property name="maxActive" value="#{applicationProps['application.jdbc.maxActive']}" />
	</bean>
	
	<bean id="userDetailsService" class="com.sharifpro.eurb.management.security.dao.impl.UserDetailsServiceImpl">
		<property name="dataSource" ref="EURBDataSource"/>
		<property name="enableGroups" value="true"/>
		<property name="enableAuthorities" value="true"/>
	</bean>
	
	<!--bean class="org.springframework.security.authentication.dao.ReflectionSaltSource" id="saltSource">
		<property name="userPropertyToUse" value="username"/>
	</bean-->

	<bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" id="passwordEncoder" />

	<!-- Start Authentication/Auhorization Config -->
	<security:http pattern="/resources-#{applicationProps['application.version']}/**" security="none" />
	<security:http pattern="/ws/**" security="none" />
	<security:http use-expressions="true" auto-config="false" entry-point-ref="authenticationEntryPoint" authentication-manager-ref="authManager">
		<security:intercept-url pattern="/login.spy*" access="isAnonymous()"/>
		<security:intercept-url pattern="/403.spy*" access="isAuthenticated()"/>
		<security:intercept-url pattern="/404.spy*" access="isAuthenticated()"/>		
		<security:intercept-url pattern="/**" access="isAuthenticated()" />
		<security:custom-filter position="FORM_LOGIN_FILTER" ref="authenticationProcessingFilter"/>
		<security:custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
		<security:custom-filter after="SESSION_MANAGEMENT_FILTER" ref="sessionRegistryFixFilter"/>
		<security:session-management invalid-session-url="/login.spy" session-authentication-strategy-ref="sas">
			<!--concurrency-control max-sessions="-1" error-if-maximum-exceeded="true" session-authentication-error-url="/login.spy" /-->
		</security:session-management>
		<security:logout logout-url="/logout.spy" logout-success-url="/login.spy" delete-cookies="JSESSIONID"/>
		<security:remember-me data-source-ref="EURBDataSource"/>
		<security:access-denied-handler error-page="/403.jsp"/>
	</security:http>
	<security:global-method-security pre-post-annotations="enabled" />

	<bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" scope="singleton" />

	<bean id="sessionRegistryFixFilter" class="com.sharifpro.util.filter.SessionRegistryFixFilter">
		<property name="sessionRegistry" ref="sessionRegistry"/>
	</bean>

	<bean id="sas" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
		<constructor-arg name="sessionRegistry" ref="sessionRegistry" />
		<property name="maximumSessions" value="-1" />
	</bean>

	<bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<property name="sessionRegistry" ref="sessionRegistry" />
		<property name="expiredUrl" value="/login.spy" />
	</bean>

	<security:authentication-manager id="authManager">
		<security:authentication-provider user-service-ref="userDetailsService">
			<security:password-encoder ref="passwordEncoder"> 
				<!--security:salt-source ref="saltSource"/-->
			</security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>

	<bean id="authenticationProcessingFilter" class="com.sharifpro.filter.AuthenticationProcessingFilter">
		<property name="sessionAuthenticationStrategy" ref="sas" />
		<property name="authenticationManager" ref="authManager" />
		<property name="authenticationSuccessHandler">
			<bean class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler" />
		</property>
	</bean>
	
	<bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<property name="loginFormUrl" value="/login.spy" />
		<property name="forceHttps" value="false" />
	</bean>
	<!-- Finish Authentication/Auhorization Config -->

	<tx:annotation-driven transaction-manager="txManager" />
	
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
		<property name="dataSource" ref="EURBDataSource" />
	</bean>
	
	<!-- Application Message Bundle -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="/WEB-INF/messages/messages" />
		<property name="cacheSeconds" value="0" />
	</bean>
	
	<!-- Scans the classpath of this application for @Components to deploy as 
		beans -->
	<context:component-scan base-package="com.sharifpro" />

	<!-- Configures the @Controller programming model -->
	<mvc:annotation-driven />

	<!-- misc -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="quartzDataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="#{applicationProps['quartz.jdbc.driver']}" />
		<property name="url" value="#{applicationProps['quartz.jdbc.url']}" />
		<property name="username" value="#{applicationProps['quartz.jdbc.username']}" />
		<property name="password" value="#{applicationProps['quartz.jdbc.password']}" />
		<property name="maxIdle" value="#{applicationProps['quartz.jdbc.maxIdle']}" />
		<property name="maxActive" value="#{applicationProps['quartz.jdbc.maxActive']}" />   
	</bean>
    
	<bean id="scheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="dataSource" ref="quartzDataSource" />
		<property name="applicationContextSchedulerContextKey" value="applicationContext"/>
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.scheduler.instanceName">ReportScheduler</prop>
				<prop key="org.quartz.scheduler.instanceId">AUTO</prop>
				<prop key="org.quartz.scheduler.skipUpdateCheck">true</prop>
				<prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
				<prop key="org.quartz.threadPool.threadCount">#{applicationProps['org.quartz.threadPool.threadCount']}</prop>      
				<prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>
				<prop key="org.quartz.jobStore.isClustered">false</prop>
				<prop key="org.quartz.jobStore.useProperties">false</prop>
				<prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop>
				<prop key="org.quartz.jobStore.driverDelegateClass">#{applicationProps['quartz.jobStore.driverDelegateClass']}</prop>
				<prop key="org.quartz.jobStore.selectWithLockSQL">#{applicationProps['quartz.jobStore.selectWithLockSQL']}</prop>
			</props>
		</property>
	</bean>
	<!-- Forwards requests to the "/" resource to the "welcome" view -->
	<mvc:view-controller path="/" view-name="index"/>

	<!-- Configures Handler Interceptors -->
	<!-- mvc:interceptors>
			<!- Changes the locale when a 'locale' request parameter is sent; e.g. /?locale=de ->
			<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
		</mvc:interceptors-->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
	<mvc:resources mapping="/resources-#{applicationProps['application.version']}/**" location="/resources/" cache-period="31556926"/>

	<!-- Saves a locale change using a cookie -->
	<!-- bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver" /-->

	<!-- Application Message Bundle -->
	<!-- bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
			<property name="basename" value="/WEB-INF/messages/messages" />
			<property name="cacheSeconds" value="0" />
		</bean-->

	<bean id="mailAuthenticator" class="com.sharifpro.eurb.builder.util.SMTPAuthenticator">
		<constructor-arg index="0" value="#{applicationProps['application.mail.username']}" />
		<constructor-arg index="1" value="#{applicationProps['application.mail.password']}" />
	</bean>

	<bean id="mailSession" class="javax.mail.Session" factory-method="getInstance">
		<constructor-arg index="0">
			<props>
				<prop key="mail.smtp.host">#{applicationProps['application.mail.smtp.host']}</prop>
				<prop key="mail.smtp.auth">#{applicationProps['application.mail.smtp.auth']}</prop>
				<prop key="mail.smtp.port">#{applicationProps['application.mail.smtp.port']}</prop>
				<prop key="mail.smtp.user">#{applicationProps['application.mail.username']}</prop>
				<prop key="password">#{applicationProps['application.mail.password']}</prop>
				<prop key="mail.smtp.from">#{applicationProps['application.mail.username']}</prop>
				<prop key="mail.smtp.starttls.enable">#{applicationProps['application.mail.smtp.starttls.enable']}</prop>
				<prop key="mail.smtp.socketFactory.class">#{applicationProps['application.mail.smtp.socketFactory.class']}</prop>
				<prop key="mail.debug">#{applicationProps['application.mail.debug']}</prop>
			</props>
		</constructor-arg>
		<constructor-arg index="1" ref="mailAuthenticator" />
	</bean>
	
	<bean id="servletContext" class="org.springframework.web.context.support.ServletContextFactoryBean"/>
</beans>